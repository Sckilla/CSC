CREATE DATABASE BD_CSC_2018
GO

USE BD_CSC_2018
GO


------------------------------------------------------------TABLAS------------------------------------------------------------

CREATE TABLE PRODUCTO
(
	PRO_ID 			INT PRIMARY KEY IDENTITY 	NOT NULL,
	PRO_TIPO 		INT		  		NOT NULL,
	PRO_CODIGO 		VARCHAR(60)		NOT NULL,
	PRO_NOMBRE		VARCHAR(60)		NOT NULL,
	PRO_DESCRIP 	VARCHAR(250) 	NOT NULL,
	PRO_PRESENT		VARCHAR(100) 	NOT NULL,
	PRO_IMAGEN		VARCHAR(max)	NULL,
	PRO_PRECIO		FLOAT			NOT NULL,
	PRO_ID_OFF		INT				NOT NULL,
	PRO_EXIST		INT 			NOT NULL,
	PRO_BAJA	 	CHAR(1) 		NOT NULL,
	PRO_FECHA_REG	DATETIME		NOT NULL
)
GO

CREATE TABLE TIPO_PROD
(
	TPR_ID			INT PRIMARY KEY IDENTITY	NOT NULL,
	TPR_TIPO		VARCHAR(60)		NOT NULL,
	TPR_DESCRIP		VARCHAR(250)	NOT NULL,
	TPR_BAJA		CHAR(1)			NOT NULL,
	TPR_FECHA_REG	DATETIME		NOT NULL
)
GO

CREATE TABLE OFERTA
(
	OFF_ID			INT PRIMARY KEY IDENTITY	NOT NULL,
	OFF_NOMBRE		VARCHAR(60)		NOT NULL,
	OFF_DESCRIP		VARCHAR(250)	NOT NULL,
	OFF_RAZON		FLOAT			NOT NULL,
	OFF_FOTO		NVARCHAR(1000)  NOT NULL,
	OFF_BAJA		CHAR(1)			NOT NULL,
	OFF_FECHA_RAG	DATETIME		NOT NULL,
)
GO

INSERT INTO OFERTA VALUES('SIN OFERTA','',0,'','0',GETDATE())
GO

CREATE TABLE CLIENTE
(
	CLI_ID  		INT PRIMARY KEY IDENTITY 	NOT NULL,
	CLI_NOMBRE 		NVARCHAR (50) 	NOT NULL,
	CLI_APE_PAT 	NVARCHAR (50)	NOT NULL,
	CLI_APE_MAT 	NVARCHAR (50)	NULL,
	CLI_SEXO 		NVARCHAR (9) 	NOT NULL,
	CLI_EMAIL		NVARCHAR (80)	NOT NULL,
	CLI_EDAD		INT 			NOT NULL,
	CLI_DIREC		NVARCHAR(250)	NOT NULL,
	CLI_TEL		 	NVARCHAR(20) 	NULL,
	CLI_FOTO		NVARCHAR(1000)  NULL,
	CLI_USUARIO 	NVARCHAR(8) 	NOT NULL,
	CLI_PASSWORD 	NVARCHAR(15) 	NOT NULL,
	CLI_BAJA 		CHAR(1) 		NOT NULL,
	CLI_FECHA_REG 	DATETIME 		NOT NULL
)
GO

CREATE TABLE USUARIOINT
(
	USU_ID					INT PRIMARY KEY IDENTITY	NOT NULL,
	USU_TIPO				INT					NOT NULL,
	USU_NOMBRE				VARCHAR(60)			NOT NULL,
	USU_APE_PAT				VARCHAR(60)			NOT NULL,
	USU_APE_MAT				VARCHAR(60)			NULL,
	USU_SEXO 				NVARCHAR (9) 		NOT NULL,
	USU_EMAIL				VARCHAR(60)			NOT NULL,
	USU_EDAD				INT 				NOT NULL,
	USU_TEL					VARCHAR(60)			NOT NULL,
	USU_DIREC				VARCHAR(120)		NOT NULL,
	USU_USUARIO				VARCHAR(8)			NOT NULL,
	USU_PASSWORD			VARCHAR(15)			NOT NULL,
	USU_FOTO				VARCHAR(1000)		NULL,
	USU_BAJA				CHAR(1)				NOT NULL,
	USU_FECHA_REG			DATETIME			NOT NULL
)
GO

CREATE TABLE TIPO_USUINT
(
  TUS_ID				INT PRIMARY KEY IDENTITY		NOT NULL,
  TUS_TIPO_USU			VARCHAR(60)				NOT  NULL,
  TUS_DESCRIPCION		VARCHAR(200)			NULL,
  TUS_BAJA				CHAR(1)					NOT NULL,
  TUS_FECHA_REG			DATETIME			NOT NULL
)
GO

INSERT INTO TIPO_USUINT VALUES('Administrador','-','0',GETDATE())
GO
INSERT INTO TIPO_USUINT VALUES('Empleado','-','0',GETDATE())
GO


CREATE TABLE VENTA
(
VEN_ID					INT PRIMARY KEY IDENTITY	NOT NULL,
VEN_TIPO_CLI			INT							NOT NULL,
VEN_ID_CLI				INT							NOT NULL,
VEN_USUARIO				NVARCHAR(8)					NOT NULL,
VEN_STUS				CHAR(1)						NOT NULL, --0 ACTIVA, 1 PAUSADA, 2 BAJA 
VEN_SUBTOTAL			FLOAT						NOT NULL,
VEN_TOTAL				FLOAT						NOT NULL,
VEN_MET_ENVIO			INT							NOT NULL,
VEN_DIREC				NVARCHAR(250)				NOT NULL,
VEN_MET_PAGO			INT							NOT NULL,
VEN_ID_PAGO				INT							NOT NULL,
VEN_FECHA				DATETIME					NOT NULL
)
GO

CREATE TABLE DET_VENTA 
(
DET_ID					INT PRIMARY KEY IDENTITY	NOT NULL,
DET_ID_VEN				INT							NOT NULL,
DET_ID_CLI				INT							NOT NULL,
DET_ID_PROD				INT							NOT NULL,
DET_TIPO_CLI			INT							NOT NULL,
DET_CANT				INT							NOT NULL,
DET_PREC_UNIT			FLOAT						NOT NULL,
DET_TOTAL				FLOAT						NOT NULL,
DET_BAJA				CHAR(1)						NOT NULL
)
GO


CREATE TABLE DEPOSITO --metodo 1
(
DTO_ID					INT PRIMARY KEY IDENTITY	NOT NULL,
DTO_CVE					NVARCHAR(18)				NOT NULL,
DTO_CLID				INT							NOT NULL,
DTO_TC					CHAR(1)						NOT NULL,
DTO_DIA					NVARCHAR(2)					NOT NULL,
DTO_MES					NVARCHAR(2)					NOT NULL,
DTO_A�O					NVARCHAR(2)					NOT NULL,
)
GO

CREATE TABLE TRANSFERENCIA --metodo 2
(
TRA_ID					INT PRIMARY KEY IDENTITY	NOT NULL,
TRA_CVE					NVARCHAR(18)				NOT NULL,
TRA_CLID				INT							NOT NULL,
TRA_TC					CHAR(1)						NOT NULL,
TRA_DIA					NVARCHAR(2)					NOT NULL,
TRA_MES					NVARCHAR(2)					NOT NULL,
TRA_A�O					NVARCHAR(2)					NOT NULL,
)
GO

CREATE TABLE TARJETA --metodo 3
(
TAR_ID					INT PRIMARY KEY IDENTITY	NOT NULL,
TAR_CLID				INT							NOT NULL,
TAR_NO					NVARCHAR(16)				NOT NULL,--NUMERO DE TARJ
TAR_TC					CHAR(1)						NOT NULL,
TAR_CVE					NVARCHAR(4)					NOT NULL,--CLAVE DE SEG
TAR_MES					NVARCHAR(2)					NOT NULL,
TAR_A�O					NVARCHAR(2)					NOT NULL,
TAR_BAN					NVARCHAR(15)				NOT NULL--BANCO
)
GO

CREATE TABLE MET_ENVIO
(
MET_ID					INT PRIMARY KEY IDENTITY	NOT NULL,
MET_NOMBRE				NVARCHAR(50)				NOT NULL,
MET_COSTO				FLOAT						NOT NULL,
MET_IMAGEN				NVARCHAR(1000)				NULL
)
GO


INSERT INTO MET_ENVIO VALUES('Estafeta',80,'Imagenes/estafeta.png')
GO
INSERT INTO MET_ENVIO VALUES('DHL',100,'Imagenes/dhl.png')
GO
INSERT INTO MET_ENVIO VALUES('FedEx',110,'Imagenes/fedex.png')
GO

--PROCEDIMIENTOS

CREATE PROCEDURE TSP_Login
(
@USU NVARCHAR(8),
@PAS NVARCHAR(15)
)
AS
BEGIN
-- VALIDAR SI EXISTE EL USUARIO Y PASSWORD
	IF EXISTS(SELECT CLI_ID FROM CLIENTE WHERE CLI_USUARIO=@USU AND CLI_PASSWORD=@PAS)--CLIENTE
	BEGIN
		SELECT '0','CLIENTE', CLI_ID, CLI_NOMBRE+' '+CLI_APE_PAT+' '+CLI_APE_MAT
		FROM CLIENTE WHERE CLI_USUARIO=@USU AND CLI_PASSWORD=@PAS
	END
	ELSE
		BEGIN
			IF EXISTS(SELECT USU_ID FROM USUARIOINT WHERE USU_USUARIO=@USU AND USU_PASSWORD=@PAS)--USUINT
				BEGIN
					SELECT B.TUS_ID, B.TUS_TIPO_USU, A.USU_ID, A.USU_NOMBRE+' '+A.USU_APE_PAT+' '+A.USU_APE_MAT 
					FROM USUARIOINT A, TIPO_USUINT B WHERE A.USU_USUARIO=@USU AND A.USU_PASSWORD=@PAS AND A.USU_TIPO=B.TUS_ID
				END
			ELSE
				SELECT '-1' -- REGISTRO NO ENCONTRADO
	END
END
GO



------------------------------------------------------------------------------------------------------------------
----------------------------------------------------clientes------------------------------------------------------
------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE TSP_RegCliente
(
@SEXO			VARCHAR (9),
@NOMBRE			VARCHAR (60),
@APE_PAT		VARCHAR (60), 
@APE_MAT		VARCHAR (60),
@EMAIL			VARCHAR (80),
@EDAD			INT,
@DIR			VARCHAR (250),
@TEL			VARCHAR (60),
@FOTO			NVARCHAR (1000),
@USUARIO		VARCHAR (8),
@PAS			VARCHAR (15)
)
AS
BEGIN
	IF((NOT EXISTS (SELECT * FROM CLIENTE WHERE CLI_USUARIO=@USUARIO)) AND (NOT EXISTS (SELECT * FROM USUARIOINT WHERE USU_USUARIO=@USUARIO)))
	BEGIN
		INSERT INTO CLIENTE VALUES (@NOMBRE,@APE_PAT,@APE_MAT,@SEXO,@EMAIL,@EDAD,@DIR,@TEL,@FOTO,@USUARIO,@PAS,'0',GETDATE())
		SELECT '1'
	END
	ELSE
		SELECT '-1'
END
GO

CREATE PROCEDURE TSP_ListarClientes
AS
BEGIN
	SELECT CLI_ID [ID], CLI_NOMBRE [NOMBRE], CLI_APE_PAT [APP], CLI_APE_MAT [APM], CLI_EMAIL [EMAIL], CLI_EDAD [EDAD], CLI_DIREC [DIR], CLI_TEL [TEL], CLI_FOTO [FOTO], CLI_USUARIO [USUARIO], CLI_PASSWORD [PASS]
	FROM CLIENTE 
	WHERE CLI_BAJA='0' 
END
GO

CREATE PROCEDURE TSP_ModificarCliente
(
@SEXO			VARCHAR (9),
@NOMBRE			VARCHAR (60),
@APE_PAT		VARCHAR (60), 
@APE_MAT		VARCHAR (60),
@EMAIL			VARCHAR (80),
@EDAD			INT,
@DIR			VARCHAR (250),
@TEL			VARCHAR (60),
@FOTO			NVARCHAR (1000),
@USUARIO		VARCHAR (8),
@PAS			VARCHAR (15)
)
AS
BEGIN
	IF(EXISTS (SELECT * FROM CLIENTE WHERE CLI_USUARIO=@USUARIO AND CLI_BAJA='0'))
	BEGIN
		UPDATE CLIENTE
		SET CLI_SEXO=@SEXO, CLI_NOMBRE=@NOMBRE, CLI_APE_PAT=@APE_PAT, CLI_APE_MAT=@APE_MAT, CLI_EMAIL=@EMAIL, CLI_EDAD=@EDAD, CLI_DIREC=@DIR, CLI_TEL=@TEL, CLI_FOTO=@FOTO, CLI_PASSWORD=@PAS
		WHERE CLI_USUARIO=@USUARIO
		SELECT '0'
	END
	ELSE
		SELECT '1'
END
GO

CREATE PROCEDURE TSP_EliminarCliente
(
@ID INT
)
AS
BEGIN
	IF(EXISTS (SELECT * FROM CLIENTE WHERE CLI_ID=@ID))
	BEGIN
		IF(EXISTS (SELECT * FROM CLIENTE WHERE CLI_ID=@ID AND CLI_BAJA='0'))
		BEGIN
			UPDATE CLIENTE
			SET CLI_BAJA='1'
			WHERE CLI_ID=@ID
			SELECT '0'--BAJA CORRECTA
		END
		ELSE
			SELECT '1'--BAJA ANTERIOR
	END
	ELSE
		SELECT '2'--NO EXISTE EL USUARIO
END
GO

CREATE PROCEDURE TSP_BuscarCliente
(
@NOMBRE VARCHAR(15)
)
AS 
BEGIN
	SELECT CLI_ID [ID], CLI_NOMBRE [NOMBRE], CLI_APE_PAT [APP], CLI_APE_MAT [APM], CLI_EMAIL [EMAIL], CLI_EDAD [EDAD], CLI_DIREC [DIR], CLI_TEL [TEL], CLI_FOTO [FOTO], CLI_USUARIO [USUARIO], CLI_PASSWORD [PASS]
	FROM CLIENTE
	WHERE ((CLI_USUARIO LIKE @NOMBRE) OR (CLI_NOMBRE LIKE @NOMBRE) OR (CLI_APE_PAT LIKE @NOMBRE)) AND CLI_BAJA='0'
END
GO

CREATE PROCEDURE TSP_DatosCliente
(
@ID INT
)
AS
BEGIN
	SELECT CLI_ID [ID], CLI_NOMBRE [NOMBRE], CLI_APE_PAT [APEPAT], CLI_APE_MAT [APEMAT], CLI_EDAD [EDAD], CLI_SEXO [SEXO], CLI_EMAIL [EMAIL], CLI_TEL [TELEFONO], CLI_DIREC [DIRECCION], CLI_FOTO [FOTO], CLI_USUARIO [USUARIO], CLI_PASSWORD [PASS]
	FROM CLIENTE
	WHERE CLI_ID=@ID AND CLI_BAJA='0'
END
GO




--------------------------------------------------------------------------------------------------------
------------------------------------------------empleados-----------------------------------------------
--------------------------------------------------------------------------------------------------------

CREATE PROCEDURE TSP_RegEmpleado
(
@TIPO			INT,
@SEXO			VARCHAR (9),
@NOMBRE			VARCHAR (60),
@APE_PAT		VARCHAR (60), 
@APE_MAT		VARCHAR (60),
@EMAIL			VARCHAR (80),
@EDAD			INT,
@DIR			VARCHAR (250),
@TEL			VARCHAR (60),
@FOTO			NVARCHAR (1000),
@USUARIO		VARCHAR (8),
@PAS			VARCHAR (15)
)
AS
BEGIN
	IF((NOT EXISTS (SELECT * FROM USUARIOINT WHERE USU_USUARIO=@USUARIO)) AND (NOT EXISTS (SELECT * FROM CLIENTE WHERE CLI_USUARIO=@USUARIO)))
	BEGIN
		INSERT INTO USUARIOINT VALUES (@TIPO,@NOMBRE,@APE_PAT,@APE_MAT,@SEXO,@EMAIL,@EDAD,@TEL,@DIR,@USUARIO,@PAS,@FOTO,'0',GETDATE())
		SELECT '1'
	END
	ELSE
		SELECT '-1'
END
GO

exec TSP_RegEmpleado 1, 'M', 'DANIEL','SANCHEZ','LOPEZ','dansanlo83@gmail.com',20,'Obsidiana Punta Azul Pachuca Hgo.', '7731379584','','DSANCHEZ', 'dbpassword'
GO

CREATE PROCEDURE TSP_ListarEmpleados
(
@TEM INT
)
AS
BEGIN
	IF @TEM='0'
	BEGIN
		SELECT A.USU_ID [ID], A.USU_TIPO [CLAVE], A.USU_NOMBRE [USU_NOMBRE], A.USU_EMAIL [EMAIL], B.TUS_TIPO_USU [TIPO], A.USU_TEL [TEL], A.USU_DIREC [DIR], A.USU_USUARIO [USUARIO], A.USU_FOTO [FOTO], A.USU_APE_PAT [APP], A.USU_APE_MAT [APM], A.USU_BAJA [BJA], A.USU_PASSWORD [PASS]
		FROM USUARIOINT A, TIPO_USUINT B
		WHERE A.USU_BAJA='0' AND B.TUS_ID=A.USU_TIPO
	END
	ELSE
		SELECT A.USU_ID [ID], A.USU_TIPO [CLAVE], A.USU_NOMBRE [USU_NOMBRE], A.USU_EMAIL [EMAIL], B.TUS_TIPO_USU [TIPO], A.USU_TEL [TEL], A.USU_DIREC [DIR], A.USU_USUARIO [USUARIO], A.USU_FOTO [FOTO], A.USU_APE_PAT [APP], A.USU_APE_MAT [APM], A.USU_BAJA [BJA], A.USU_PASSWORD [PASS]
		FROM USUARIOINT A, TIPO_USUINT B
		WHERE A.USU_BAJA='0' AND A.USU_TIPO=@TEM AND B.TUS_ID=A.USU_TIPO
END
GO

CREATE PROCEDURE TSP_ListarTipoEmp
AS
BEGIN
	SELECT TUS_ID [ID], TUS_TIPO_USU [TIPO]
	FROM TIPO_USUINT
END
GO

CREATE PROCEDURE TSP_ModificarEmpleado
(
@TIPO			INT,
@SEXO			VARCHAR (9),
@NOMBRE			VARCHAR (60),
@APE_PAT		VARCHAR (60), 
@APE_MAT		VARCHAR (60),
@EMAIL			VARCHAR (80),
@EDAD			INT,
@DIR			VARCHAR (250),
@TEL			VARCHAR (60),
@FOTO			NVARCHAR (1000),
@USUARIO		VARCHAR (8),
@PAS			VARCHAR (15)
)
AS 
BEGIN
	IF(EXISTS (SELECT * FROM USUARIOINT WHERE USU_USUARIO=@USUARIO AND USU_BAJA='0'))
	BEGIN
		UPDATE USUARIOINT
		SET USU_TIPO=@TIPO, USU_SEXO=@SEXO, USU_NOMBRE=@NOMBRE, USU_APE_PAT=@APE_PAT, USU_APE_MAT=@APE_MAT, USU_EMAIL=@EMAIL, USU_EDAD=@EDAD, USU_DIREC=@DIR, USU_TEL=@TEL, USU_FOTO=@FOTO, USU_PASSWORD=@PAS
		WHERE USU_USUARIO=@USUARIO
		SELECT '0'
	END
	ELSE
		SELECT '1'
END
GO

CREATE PROCEDURE TSP_EliminarEmpleado
(
@ID INT 
)
AS
BEGIN
	IF(EXISTS (SELECT * FROM USUARIOINT WHERE USU_ID=@ID))
	BEGIN
		IF(EXISTS (SELECT * FROM USUARIOINT WHERE USU_ID=@ID AND USU_BAJA='0'))
		BEGIN
			UPDATE USUARIOINT
			SET USU_BAJA='1'
			WHERE USU_ID=@ID
			SELECT '0'--BAJA EXITOSA
		END
		ELSE
			SELECT '1'--BAJA ANTERIOR
	END
	ELSE
		SELECT '2'--USUARIO NO EXISTENTE
END
GO

CREATE PROCEDURE TSP_BuscarEmpleado
(
@NOMBRE VARCHAR(15)
)
AS 
BEGIN
	SELECT A.USU_ID [ID], A.USU_TIPO [CLAVE], A.USU_NOMBRE [USU_NOMBRE], A.USU_EMAIL [EMAIL], B.TUS_TIPO_USU [TIPO], A.USU_TEL [TEL], A.USU_DIREC [DIR], A.USU_USUARIO [USUARIO], A.USU_FOTO [FOTO], A.USU_APE_PAT [APP], A.USU_APE_MAT [APM], A.USU_BAJA [BJA], A.USU_PASSWORD [PASS]
	FROM USUARIOINT A, TIPO_USUINT B
	WHERE ((A.USU_USUARIO LIKE @NOMBRE) OR (A.USU_NOMBRE LIKE @NOMBRE) OR (A.USU_APE_PAT LIKE @NOMBRE)) AND A.USU_BAJA='0' AND A.USU_TIPO=B.TUS_ID
END
GO

CREATE PROCEDURE TSP_DatosEmpleado
(
@ID INT
)
AS
BEGIN
	SELECT A.USU_ID [ID], B.TUS_TIPO_USU [TIPO], A.USU_NOMBRE [NOMBRE], A.USU_APE_PAT [APEPAT], A.USU_APE_MAT [APEMAT], A.USU_EDAD [EDAD], A.USU_SEXO [SEXO], A.USU_EMAIL [EMAIL], A.USU_TEL [TELEFONO], A.USU_DIREC [DIRECCION], A.USU_FOTO [FOTO], A.USU_USUARIO [USUARIO], A.USU_PASSWORD [PASS], B.TUS_ID [IDT]
	FROM USUARIOINT A, TIPO_USUINT B
	WHERE A.USU_BAJA='0' AND B.TUS_ID=A.USU_TIPO AND A.USU_ID=@ID
END
GO



----------------------------------------------------------------------------------------------
-----------------------------------------productos--------------------------------------------
----------------------------------------------------------------------------------------------

CREATE PROCEDURE TSP_RegProducto
(
@TIPO		INT,
@CODIGO		VARCHAR(60),
@NOMBRE		VARCHAR(60),
@DESCRIP	VARCHAR(250),
@PRESENT	VARCHAR(100),
@IMAGEN		VARCHAR(1000),
@PRECIO		FLOAT,
@IDOFF		INT,
@EXIST		INT,
@BAJA		CHAR
)
AS
BEGIN
	IF(NOT EXISTS (SELECT * FROM PRODUCTO WHERE PRO_CODIGO=@CODIGO))
	BEGIN
		IF(NOT EXISTS (SELECT * FROM PRODUCTO WHERE PRO_NOMBRE=@NOMBRE))
		BEGIN
			INSERT INTO PRODUCTO VALUES(@TIPO,@CODIGO,@NOMBRE,@DESCRIP,@PRESENT,@IMAGEN,@PRECIO,@IDOFF,@EXIST,@BAJA,GETDATE())
			SELECT '0'
		END
		ELSE
			SELECT '1'--NOMBRE REPETIDO
	END
	ELSE
	BEGIN
		IF(EXISTS (SELECT * FROM PRODUCTO WHERE PRO_NOMBRE=@NOMBRE))
		BEGIN
			SELECT '2'--NOMBRE Y CODIGO REPETIDO
		END
		ELSE
			SELECT '3'--CODIGO REPETIDO
	END
END
GO

CREATE PROCEDURE TSP_ListarProductos
(
@TIPO INT
)
AS
BEGIN
	IF(@TIPO='0')
	BEGIN
		SELECT B.TPR_TIPO [TIPO], A.PRO_ID [ID], A.PRO_CODIGO [CODIGO], A.PRO_NOMBRE [PRODUCTO], A.PRO_DESCRIP [DESCRIPCION], A.PRO_PRESENT [PRESENTACION], A.PRO_IMAGEN [FOTO], A.PRO_PRECIO [PRECIO], A.PRO_EXIST [EXISTENCIAS], C.OFF_NOMBRE [OFERTA]
		FROM PRODUCTO A, TIPO_PROD B, OFERTA C
		WHERE A.PRO_BAJA='0' AND B.TPR_ID=A.PRO_TIPO AND C.OFF_ID=A.PRO_ID_OFF
	END
	ELSE
	BEGIN
		SELECT B.TPR_TIPO [TIPO], A.PRO_ID [ID], A.PRO_CODIGO [CODIGO], A.PRO_NOMBRE [PRODUCTO], A.PRO_DESCRIP [DESCRIPCION], A.PRO_PRESENT [PRESENTACION], A.PRO_IMAGEN [FOTO], A.PRO_PRECIO [PRECIO], A.PRO_EXIST [EXISTENCIAS], C.OFF_NOMBRE [OFERTA]
		FROM PRODUCTO A, TIPO_PROD B, OFERTA C
		WHERE A.PRO_BAJA='0' AND B.TPR_ID=A.PRO_TIPO AND A.PRO_TIPO=@TIPO AND C.OFF_ID=A.PRO_ID_OFF
	END
END
GO

CREATE PROCEDURE TSP_ListarProdAleat
(
@TIPO INT
)
AS
BEGIN
	IF(@TIPO='0')
	BEGIN
		SELECT TOP 24 B.TPR_TIPO [TIPO], A.PRO_ID [ID], A.PRO_CODIGO [CODIGO], A.PRO_NOMBRE [PRODUCTO], A.PRO_DESCRIP [DESCRIPCION], A.PRO_PRESENT [PRESENTACION], A.PRO_IMAGEN [FOTO], A.PRO_PRECIO [PRECIO], A.PRO_PRECIO-(A.PRO_PRECIO*C.OFF_RAZON) [PRECIOF], C.OFF_RAZON, A.PRO_EXIST [EXISTENCIAS], ROW_NUMBER() OVER (ORDER BY A.PRO_ID) [FILA]
		FROM PRODUCTO A, TIPO_PROD B, OFERTA C
		WHERE A.PRO_BAJA='0' AND B.TPR_ID=A.PRO_TIPO AND C.OFF_ID=A.PRO_ID_OFF
		ORDER BY NEWID()
	END
	ELSE
	BEGIN
		SELECT TOP 24 B.TPR_TIPO [TIPO], A.PRO_ID [ID], A.PRO_CODIGO [CODIGO], A.PRO_NOMBRE [PRODUCTO], A.PRO_DESCRIP [DESCRIPCION], A.PRO_PRESENT [PRESENTACION], A.PRO_IMAGEN [FOTO], A.PRO_PRECIO [PRECIO], A.PRO_PRECIO-(A.PRO_PRECIO*C.OFF_RAZON) [PRECIOF], C.OFF_RAZON, A.PRO_EXIST [EXISTENCIAS], ROW_NUMBER() OVER (ORDER BY A.PRO_ID) [FILA]
		FROM PRODUCTO A, TIPO_PROD B, OFERTA C
		WHERE A.PRO_BAJA='0' AND B.TPR_ID=A.PRO_TIPO AND A.PRO_TIPO=@TIPO AND C.OFF_ID=A.PRO_ID_OFF
		ORDER BY NEWID()
	END
END
GO

CREATE PROCEDURE TSP_ListarProdFecha
(
@TIPO INT
)
AS
BEGIN
	IF(@TIPO='0')
	BEGIN
		SELECT TOP 24 B.TPR_TIPO [TIPO], A.PRO_ID [ID], A.PRO_CODIGO [CODIGO], A.PRO_NOMBRE [PRODUCTO], A.PRO_DESCRIP [DESCRIPCION], A.PRO_PRESENT [PRESENTACION], A.PRO_IMAGEN [FOTO], A.PRO_PRECIO [PRECIO], A.PRO_PRECIO-(A.PRO_PRECIO*C.OFF_RAZON) [PRECIOF], C.OFF_RAZON, A.PRO_EXIST [EXISTENCIAS], ROW_NUMBER() OVER (ORDER BY A.PRO_ID) [FILA]
		FROM PRODUCTO A, TIPO_PROD B, OFERTA C
		WHERE A.PRO_BAJA='0' AND B.TPR_ID=A.PRO_TIPO AND C.OFF_ID=A.PRO_ID_OFF
		ORDER BY A.PRO_FECHA_REG DESC
	END
	ELSE
	BEGIN
		SELECT TOP 24 B.TPR_TIPO [TIPO], A.PRO_ID [ID], A.PRO_CODIGO [CODIGO], A.PRO_NOMBRE [PRODUCTO], A.PRO_DESCRIP [DESCRIPCION], A.PRO_PRESENT [PRESENTACION], A.PRO_IMAGEN [FOTO], A.PRO_PRECIO [PRECIO], A.PRO_PRECIO-(A.PRO_PRECIO*C.OFF_RAZON) [PRECIOF], C.OFF_RAZON, A.PRO_EXIST [EXISTENCIAS], ROW_NUMBER() OVER (ORDER BY A.PRO_ID) [FILA]
		FROM PRODUCTO A, TIPO_PROD B, OFERTA C
		WHERE A.PRO_BAJA='0' AND B.TPR_ID=A.PRO_TIPO AND A.PRO_TIPO=@TIPO AND C.OFF_ID=A.PRO_ID_OFF
		ORDER BY A.PRO_FECHA_REG DESC
	END
END
GO

CREATE PROCEDURE TSP_ListarProdOfer
(
@TIPO   INT,
@P		INT
)
AS
BEGIN
	IF(@TIPO='0')
	BEGIN
		SELECT * FROM(
		SELECT B.TPR_TIPO [TIPO], A.PRO_ID [ID], A.PRO_CODIGO [CODIGO], A.PRO_NOMBRE [PRODUCTO], A.PRO_DESCRIP [DESCRIPCION], A.PRO_PRESENT [PRESENTACION], A.PRO_IMAGEN [FOTO], A.PRO_PRECIO [PRECIO], A.PRO_PRECIO-(A.PRO_PRECIO*C.OFF_RAZON) [PRECIOF], C.OFF_RAZON, A.PRO_EXIST [EXISTENCIAS], ROW_NUMBER() OVER (ORDER BY A.PRO_ID) [FILA]
		FROM PRODUCTO A, TIPO_PROD B, OFERTA C
		WHERE A.PRO_BAJA='0' AND B.TPR_ID=A.PRO_TIPO AND A.PRO_ID_OFF=C.OFF_ID AND A.PRO_ID_OFF<>1)
		AS ALIAS
		WHERE FILA>=@P AND FILA<@P+24
	END
	ELSE
	BEGIN
		SELECT * FROM(
		SELECT B.TPR_TIPO [TIPO], A.PRO_ID [ID], A.PRO_CODIGO [CODIGO], A.PRO_NOMBRE [PRODUCTO], A.PRO_DESCRIP [DESCRIPCION], A.PRO_PRESENT [PRESENTACION], A.PRO_IMAGEN [FOTO], A.PRO_PRECIO [PRECIO], A.PRO_PRECIO-(A.PRO_PRECIO*C.OFF_RAZON) [PRECIOF], C.OFF_RAZON, A.PRO_EXIST [EXISTENCIAS], ROW_NUMBER() OVER (ORDER BY A.PRO_ID) [FILA]
		FROM PRODUCTO A, TIPO_PROD B, OFERTA C
		WHERE A.PRO_BAJA='0' AND B.TPR_ID=A.PRO_TIPO AND A.PRO_TIPO=@TIPO AND A.PRO_ID_OFF=C.OFF_ID AND A.PRO_ID_OFF<>1)
		AS ALIAS
		WHERE FILA>=@P AND FILA<@P+24
	END
END
GO

CREATE PROCEDURE TSP_ListarNProductos
(
@TIPO   INT,
@P		INT
)
AS
BEGIN
	IF(@TIPO='0')
	BEGIN
		SELECT * FROM(
		SELECT B.TPR_TIPO [TIPO], A.PRO_ID [ID], A.PRO_CODIGO [CODIGO], A.PRO_NOMBRE [PRODUCTO], A.PRO_DESCRIP [DESCRIPCION], A.PRO_PRESENT [PRESENTACION], A.PRO_IMAGEN [FOTO], A.PRO_PRECIO [PRECIO], A.PRO_PRECIO-(A.PRO_PRECIO*C.OFF_RAZON) [PRECIOF], C.OFF_RAZON, A.PRO_EXIST [EXISTENCIAS], ROW_NUMBER() OVER (ORDER BY A.PRO_ID) [FILA]
		FROM PRODUCTO A, TIPO_PROD B, OFERTA C
		WHERE A.PRO_BAJA='0' AND B.TPR_ID=A.PRO_TIPO AND A.PRO_ID_OFF=C.OFF_ID)
		AS ALIAS
		WHERE FILA>=@P AND FILA<@P+24
	END
	ELSE
	BEGIN
		SELECT * FROM(
		SELECT B.TPR_TIPO [TIPO], A.PRO_ID [ID], A.PRO_CODIGO [CODIGO], A.PRO_NOMBRE [PRODUCTO], A.PRO_DESCRIP [DESCRIPCION], A.PRO_PRESENT [PRESENTACION], A.PRO_IMAGEN [FOTO], A.PRO_PRECIO [PRECIO], A.PRO_PRECIO-(A.PRO_PRECIO*C.OFF_RAZON) [PRECIOF], C.OFF_RAZON, A.PRO_EXIST [EXISTENCIAS], ROW_NUMBER() OVER (ORDER BY A.PRO_ID) [FILA]
		FROM PRODUCTO A, TIPO_PROD B, OFERTA C
		WHERE A.PRO_BAJA='0' AND B.TPR_ID=A.PRO_TIPO AND A.PRO_TIPO=@TIPO AND A.PRO_ID_OFF=C.OFF_ID)
		AS ALIAS
		WHERE FILA>=@P AND FILA<@P+24
	END
END
GO

CREATE PROCEDURE TSP_CuentaConsProd
(
@TIPO INT
)
AS
BEGIN
	IF(@TIPO='0')
	BEGIN
		SELECT COUNT(A.PRO_ID)
		FROM PRODUCTO A, TIPO_PROD B
		WHERE A.PRO_BAJA='0' AND B.TPR_ID=A.PRO_TIPO
	END
	ELSE
	BEGIN
		SELECT COUNT(A.PRO_ID)
		FROM PRODUCTO A, TIPO_PROD B
		WHERE A.PRO_BAJA='0' AND B.TPR_ID=A.PRO_TIPO AND A.PRO_TIPO=@TIPO
	END
END
GO

CREATE PROCEDURE TSP_CuentaConsOfer
(
@TIPO INT
)
AS
BEGIN
	IF(@TIPO='0')
	BEGIN
		SELECT COUNT(A.PRO_ID)
		FROM PRODUCTO A, TIPO_PROD B
		WHERE A.PRO_BAJA='0' AND B.TPR_ID=A.PRO_TIPO AND A.PRO_ID_OFF<>1 
	END
	ELSE
	BEGIN
		SELECT COUNT(A.PRO_ID)
		FROM PRODUCTO A, TIPO_PROD B
		WHERE A.PRO_BAJA='0' AND B.TPR_ID=A.PRO_TIPO AND A.PRO_TIPO=@TIPO AND A.PRO_ID_OFF<>1
	END
END
GO

CREATE PROCEDURE TSP_ListarTipoProd
AS
BEGIN
	SELECT TPR_ID [ID], TPR_TIPO [TIPO], TPR_DESCRIP [DESC]
	FROM TIPO_PROD
	WHERE TPR_BAJA = '0'
	ORDER BY TPR_ID
END
GO

CREATE PROCEDURE TSP_ModificarProducto
(
@ID			INT,
@TIPO		INT,
@CODIGO		VARCHAR(60),
@NOMBRE		VARCHAR(60),
@DESCRIP	VARCHAR(250),
@PRESENT	VARCHAR(100),
@IMAGEN		VARCHAR(MAX),
@PRECIO		FLOAT,
@CVE_OFF	INT,
@EXIST		INT,
@BAJA		CHAR(1)
)
AS
BEGIN
	IF(EXISTS (SELECT * FROM PRODUCTO WHERE PRO_ID=@ID))
	BEGIN
		IF(NOT EXISTS (SELECT * FROM PRODUCTO WHERE PRO_ID<>@ID AND PRO_NOMBRE=@NOMBRE))
		BEGIN
			IF(NOT EXISTS (SELECT * FROM PRODUCTO WHERE PRO_ID<>@ID AND PRO_CODIGO=@CODIGO))
			BEGIN
				UPDATE PRODUCTO
				SET PRO_TIPO=@TIPO, PRO_CODIGO=@CODIGO, PRO_NOMBRE=@NOMBRE, PRO_DESCRIP=@DESCRIP, PRO_PRESENT=@PRESENT, PRO_IMAGEN=@IMAGEN, PRO_PRECIO=@PRECIO, PRO_EXIST=@EXIST, PRO_ID_OFF=@CVE_OFF, PRO_BAJA=@BAJA
				WHERE PRO_ID=@ID
				SELECT '0'--MODIFICACION CORRECTA
			END
			ELSE
				SELECT '1'--CODIGO REPETIDO
		END
		ELSE 
		BEGIN
			IF(EXISTS (SELECT * FROM PRODUCTO WHERE PRO_ID<>@ID AND PRO_CODIGO=@CODIGO))
			BEGIN
				SELECT '2'--NOMBRE Y CODIGO REPETIDO
			END
			ELSE
				SELECT '3'--NOMBRE REPETIDO
		END	
	END
	ELSE
		SELECT '4'--SIN REGISTROS
END
GO

CREATE PROCEDURE TSP_EliminarProducto
(
@ID INT
)
AS
BEGIN
	IF(EXISTS (SELECT * FROM PRODUCTO WHERE PRO_ID=@ID))
	BEGIN
		IF(EXISTS (SELECT * FROM PRODUCTO WHERE PRO_ID=@ID AND PRO_BAJA='0'))
		BEGIN
			UPDATE PRODUCTO
			SET PRO_BAJA='1'
			WHERE PRO_ID=@ID
			SELECT '0'
		END
		ELSE
			SELECT '1'
	END
	ELSE
		SELECT '2'
END
GO

CREATE PROCEDURE TSP_BuscarProducto
(
@NOMBRE VARCHAR(50),
@TB INT
)
AS 
BEGIN
	IF(@TB=0)
	BEGIN
		SELECT B.TPR_TIPO [TIPO], A.PRO_ID [ID], A.PRO_CODIGO [CODIGO], A.PRO_NOMBRE [PRODUCTO], A.PRO_DESCRIP [DESCRIPCION], A.PRO_PRESENT [PRESENTACION], A.PRO_IMAGEN [FOTO], A.PRO_PRECIO [PRECIO], A.PRO_EXIST [EXISTENCIAS], C.OFF_NOMBRE [OFERTA]
		FROM PRODUCTO A, TIPO_PROD B, OFERTA C
		WHERE (A.PRO_NOMBRE LIKE @NOMBRE) AND A.PRO_TIPO=B.TPR_ID AND C.OFF_ID=A.PRO_ID_OFF
	END
	ELSE
	BEGIN
		SELECT B.TPR_TIPO [TIPO], A.PRO_ID [ID], A.PRO_CODIGO [CODIGO], A.PRO_NOMBRE [PRODUCTO], A.PRO_DESCRIP [DESCRIPCION], A.PRO_PRESENT [PRESENTACION], A.PRO_IMAGEN [FOTO], A.PRO_PRECIO [PRECIO], A.PRO_EXIST [EXISTENCIAS], C.OFF_NOMBRE [OFERTA]
		FROM PRODUCTO A, TIPO_PROD B, OFERTA C
		WHERE (A.PRO_NOMBRE LIKE @NOMBRE) AND A.PRO_TIPO=B.TPR_ID AND A.PRO_BAJA='0' AND C.OFF_ID=A.PRO_ID_OFF
	END
END
GO

CREATE PROCEDURE TSP_DatosProducto
(
@ID INT
)
AS
BEGIN
	SELECT A.PRO_ID [ID], B.TPR_TIPO [TIPO], A.PRO_NOMBRE [NOMBRE], A.PRO_DESCRIP [DESCRIPCION], A.PRO_PRESENT [PRESENTACION], A.PRO_IMAGEN [IMAGEN], A.PRO_PRECIO [PRECIO], A.PRO_EXIST [EXIST], A.PRO_BAJA [ESTATUS], A.PRO_CODIGO [CODIGO], B.TPR_ID [IDT], A.PRO_ID_OFF [OFF], A.PRO_PRECIO-(A.PRO_PRECIO*C.OFF_RAZON) [PRECIOF]
	FROM PRODUCTO A, TIPO_PROD B, OFERTA C
	WHERE A.PRO_ID=@ID AND A.PRO_TIPO=B.TPR_ID AND C.OFF_ID=A.PRO_ID_OFF
END
GO

-----------------------------------------------------TPRODUCTOS

CREATE PROCEDURE TSP_RegTProductos
(
@TIPO	VARCHAR(60),
@DESC	VARCHAR(250),
@BAJA	CHAR(1)
)
AS
BEGIN
	IF(NOT EXISTS(SELECT * FROM TIPO_PROD WHERE TPR_TIPO=@TIPO))
	BEGIN
		INSERT INTO TIPO_PROD
		VALUES (@TIPO,@DESC,@BAJA,GETDATE())
		SELECT '0'
	END
	ELSE
		SELECT '1'
END
GO

CREATE PROCEDURE TSP_ModificarTProductos
(
@ID		INT,
@TIPO	VARCHAR(60),
@DESC	VARCHAR(250),
@BAJA	CHAR(1)
)
AS
BEGIN
	IF(NOT EXISTS(SELECT * FROM TIPO_PROD WHERE TPR_TIPO=@TIPO AND TPR_ID<>@ID))
	BEGIN
		UPDATE TIPO_PROD
		SET TPR_TIPO=@TIPO, TPR_DESCRIP=@DESC, TPR_BAJA=@BAJA
		WHERE TPR_ID=@ID
		SELECT '0'
	END
	ELSE
		SELECT '1'
END
GO

CREATE PROCEDURE TSP_EliminarTProductos
(
@ID		INT
)
AS
BEGIN
	IF(EXISTS (SELECT * FROM TIPO_PROD WHERE TPR_ID=@ID))
	BEGIN
		IF(EXISTS (SELECT * FROM TIPO_PROD WHERE TPR_ID=@ID AND TPR_BAJA='0'))
		BEGIN 
			UPDATE TIPO_PROD
			SET TPR_BAJA='1'
			WHERE TPR_ID=@ID
			SELECT '0'
		END
		ELSE
			SELECT '1'
	END
	ELSE
		SELECT '2'
END
GO

CREATE PROCEDURE TSP_BuscarTProducto
(
@KEY	VARCHAR(50),
@TB		INT
)
AS
BEGIN
	IF(@TB=0)
	BEGIN
		SELECT TPR_ID [ID], TPR_TIPO [TIPO], TPR_DESCRIP [DESC] FROM TIPO_PROD WHERE TPR_TIPO LIKE @KEY
	END
	ELSE
	BEGIN
		SELECT TPR_ID [ID], TPR_TIPO [TIPO], TPR_DESCRIP [DESC] FROM TIPO_PROD WHERE TPR_TIPO LIKE @KEY AND TPR_BAJA='0'
	END
END
GO

CREATE PROCEDURE TSP_DatosTProductos
(
@ID		INT
)
AS
BEGIN
	SELECT TPR_ID [ID], TPR_TIPO [TIPO], TPR_DESCRIP [DESC], TPR_BAJA [BAJA] FROM TIPO_PROD WHERE TPR_ID=@ID
END
GO


--------------------------------------------------------------------------------------------------------------
-----------------------------------------------------OFERTAS--------------------------------------------------
--------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE TSP_RegOferta
(
@NOMBRE		VARCHAR(60),
@DESCRIP	VARCHAR(250),
@RAZON		FLOAT,
@FOTO		VARCHAR(1000),
@BAJA		CHAR(1)
)
AS
BEGIN
	IF(NOT EXISTS(SELECT * FROM OFERTA WHERE OFF_NOMBRE=@NOMBRE))
	BEGIN
		INSERT INTO OFERTA
		VALUES(@NOMBRE, @DESCRIP, @RAZON, @FOTO, @BAJA, GETDATE())
		SELECT '0'
	END
	ELSE
		SELECT '1'
END
GO

CREATE PROCEDURE TSP_EliminarOferta
(
@CVE	INT
)
AS
BEGIN
	IF(EXISTS (SELECT * FROM OFERTA WHERE OFF_ID=@CVE))
	BEGIN
		IF(EXISTS(SELECT * FROM OFERTA WHERE OFF_BAJA='0' AND OFF_ID=@CVE))
		BEGIN
			UPDATE OFERTA
			SET OFF_BAJA='1'
			WHERE OFF_ID=@CVE
			SELECT '0'
		END
		ELSE
			SELECT '1'
	END
	ELSE
		SELECT '2'
END
GO

CREATE PROCEDURE TSP_ModificarOferta
(
@CVE		INT,
@DESCRIP	VARCHAR(250),
@RAZON		FLOAT,
@FOTO		VARCHAR(1000),
@BAJA		CHAR(1)
)
AS
BEGIN
	IF(EXISTS (SELECT * FROM OFERTA WHERE OFF_ID=@CVE))
	BEGIN
		UPDATE OFERTA
		SET OFF_DESCRIP=@DESCRIP, OFF_RAZON=@RAZON, OFF_BAJA=@BAJA, OFF_FOTO=@FOTO
		WHERE OFF_ID=@CVE
		SELECT '0'
	END
	ELSE
		SELECT '1'
END
GO

CREATE PROCEDURE TSP_ListarOfertas
(
@AB INT --0 TODOS 1 AN ALTA
)
AS
BEGIN
	IF(@AB=0)
	BEGIN
		SELECT OFF_ID [ID], OFF_NOMBRE [NOMBRE], OFF_DESCRIP [DESCRIP], OFF_FOTO [FOTO], OFF_RAZON [RAZON], OFF_BAJA [BAJA] FROM OFERTA
	END
	ELSE
		SELECT OFF_ID [ID], OFF_NOMBRE [NOMBRE], OFF_DESCRIP [DESCRIP], OFF_FOTO [FOTO], OFF_RAZON [RAZON], OFF_BAJA [BAJA] FROM OFERTA WHERE OFF_BAJA='0'
END	
GO

CREATE PROCEDURE TSP_BuscarOferta
(
@KEY	VARCHAR(50)
)
AS
BEGIN
	SELECT OFF_ID [ID], OFF_NOMBRE [NOMBRE], OFF_DESCRIP [DESCRIP], OFF_FOTO [FOTO], OFF_RAZON [RAZON], OFF_BAJA [BAJA] FROM OFERTA WHERE OFF_NOMBRE LIKE @KEY
END
GO

CREATE PROCEDURE TSP_DatosOferta
(
@ID	INT
)
AS
BEGIN
	IF(EXISTS (SELECT * FROM OFERTA WHERE OFF_ID=@ID))
	BEGIN
		SELECT OFF_ID [ID], OFF_NOMBRE [NOMBRE], OFF_RAZON [RAZON], OFF_BAJA [BAJA], OFF_DESCRIP [DESCRIP], OFF_FOTO [FOTO] FROM OFERTA WHERE OFF_ID=@ID
	END
	ELSE
		SELECT '0'
END
GO


--------------------------------------------------------------------------------------------------------------
------------------------------------------------------VENTAS--------------------------------------------------
--------------------------------------------------------------------------------------------------------------

--genera nuevo detalle de venta, lo modifica o lo vuelve a dar de alta dependiendo del estado del comprador
CREATE PROCEDURE TSP_NuevoDetV
(
@TC			CHAR(1),--0 CLIENTE, 1 USUINT
@IDC		INT,
@IDP		INT,
@CANT		INT
)
AS
BEGIN
	IF(NOT EXISTS (SELECT * FROM DET_VENTA WHERE DET_ID_CLI=@IDC AND DET_ID_PROD=@IDP AND DET_ID_VEN=0 AND DET_TIPO_CLI=@TC))--si no existe detalle para ese cliente y producto
	BEGIN
		DECLARE @TOTAL	FLOAT, @PRUNT	FLOAT	
		SET @PRUNT=(SELECT A.PRO_PRECIO-(A.PRO_PRECIO*B.OFF_RAZON) FROM PRODUCTO A, OFERTA B WHERE A.PRO_ID=@IDP AND A.PRO_ID_OFF=B.OFF_ID)
		SET @TOTAL=(@PRUNT*@CANT)
		INSERT INTO DET_VENTA
		VALUES(0,@IDC,@IDP,@TC,@CANT,@PRUNT,@TOTAL,'0')
		UPDATE PRODUCTO
		SET PRO_EXIST = PRO_EXIST-@CANT
		WHERE PRO_ID=@IDP
		SELECT '0' --NUEVO REGISTRO
	END
	ELSE
	BEGIN
		DECLARE @NTOTAL FLOAT
		IF(EXISTS (SELECT * FROM DET_VENTA WHERE DET_BAJA='0' AND DET_ID_CLI=@IDC AND DET_ID_PROD=@IDP AND DET_ID_VEN=0 AND DET_TIPO_CLI=@TC))--si existe un detalle de venta actual con ese cliente y producto
		BEGIN
			DECLARE @NCANT INT
			SET @NCANT=((SELECT DET_CANT FROM DET_VENTA WHERE DET_BAJA='0' AND DET_ID_CLI=@IDC AND DET_ID_PROD=@IDP AND DET_ID_VEN=0 AND DET_TIPO_CLI=@TC)+@CANT)
			SET @TOTAL=((SELECT DET_PREC_UNIT FROM DET_VENTA WHERE DET_BAJA='0' AND DET_ID_CLI=@IDC AND DET_ID_PROD=@IDP AND DET_ID_VEN=0 AND DET_TIPO_CLI=@TC)*@NCANT)
			UPDATE DET_VENTA
			SET DET_CANT=@NCANT, DET_TOTAL=@TOTAL
			WHERE DET_BAJA='0' AND DET_ID_CLI=@IDC AND DET_ID_PROD=@IDP AND DET_ID_VEN=0
			UPDATE PRODUCTO
			SET PRO_EXIST = PRO_EXIST-@CANT
			WHERE PRO_ID=@IDP
			SELECT '1'--REGISTRO MODIFICADO
		END
		ELSE--si existe un detalle de venta para ese cliente y producto dado de baja
		BEGIN
			DECLARE @NPRUNT FLOAT
			SET @NPRUNT=(SELECT A.PRO_PRECIO-(A.PRO_PRECIO*B.OFF_RAZON) FROM PRODUCTO A, OFERTA B WHERE A.PRO_ID=@IDP AND A.PRO_ID_OFF=B.OFF_ID)
			SET @TOTAL=(@NPRUNT*@CANT)
			UPDATE DET_VENTA
			SET DET_CANT=@CANT, DET_TOTAL=@TOTAL, DET_BAJA='0', DET_PREC_UNIT=@NPRUNT
			WHERE DET_ID_CLI=@IDC AND DET_ID_PROD=@IDP AND DET_ID_VEN=0
			UPDATE PRODUCTO
			SET PRO_EXIST = PRO_EXIST-@CANT
			WHERE PRO_ID=@IDP
			SELECT '2'--REGISTRO RECUPERADO
		END
	END
END
GO

--da de baja un detalle de venta
CREATE PROCEDURE TSP_BajaDetV
(
@IDET	INT
)
AS
BEGIN
	IF(EXISTS (SELECT * FROM DET_VENTA WHERE DET_ID=@IDET))
	BEGIN
		IF(EXISTS (SELECT * FROM DET_VENTA WHERE DET_BAJA='0'))
		BEGIN
			UPDATE DET_VENTA
			SET DET_BAJA='1'
			WHERE DET_ID=@IDET
			UPDATE PRODUCTO
			SET PRO_EXIST = PRO_EXIST+(SELECT DET_CANT FROM DET_VENTA WHERE DET_ID=@IDET)
			WHERE PRO_ID=(SELECT DET_ID_PROD FROM DET_VENTA WHERE DET_ID=@IDET)
			SELECT '0'--eliminado correctamente
		END
		ELSE 
			SELECT '1'--ya estaba eliminado
	END
	ELSE
		SELECT '2'--no se encontr� detalle
END
GO

--da de baja todos los detalles de venta del carrito de un cliente y actualiza las existencias
CREATE PROCEDURE TSP_BajaCarrrito
(
@CLID	INT,
@TC		CHAR(1)
)
AS
BEGIN
	DECLARE @T TABLE (IDP INT, CANT INT, ROWN	INT)
	INSERT INTO @T SELECT DET_ID_PROD, DET_CANT, ROW_NUMBER() OVER (ORDER BY DET_ID_PROD) FROM DET_VENTA WHERE DET_ID_CLI=@CLID AND DET_TIPO_CLI=@TC AND DET_ID_VEN=0 AND DET_BAJA='0'
	DECLARE @N INT, @FLAG INT
	SET @N=(SELECT COUNT(IDP) FROM @T)
	SET @FLAG=1
	WHILE (@FLAG<=@N)
	BEGIN
		UPDATE PRODUCTO
		SET PRO_EXIST=PRO_EXIST+(SELECT CANT FROM @T WHERE ROWN=@FLAG)
		WHERE PRO_ID=(SELECT IDP FROM @T WHERE ROWN=@FLAG)
		SET @FLAG=@FLAG+1
	END
	UPDATE DET_VENTA
	SET DET_BAJA='1'
	WHERE DET_ID_CLI=@CLID AND DET_ID_VEN=0 AND DET_TIPO_CLI=@TC AND DET_BAJA='0'
	SELECT '1'
END
GO

--listar los detalles de venta tentativos (a�n no ligados a una venta culminada)
CREATE PROCEDURE TSP_ListarCarritoCliente
(
@IDC	INT,
@TC		CHAR(1)--0 CLIENTE, 1 USUINT
)
AS
BEGIN
	SELECT A.DET_ID [ID], B.PRO_NOMBRE [PRODUCTO], B.PRO_IMAGEN [FOTO], B.PRO_CODIGO [CODIGO], A.DET_CANT [CANTIDAD], A.DET_PREC_UNIT [PRECIO], A.DET_TOTAL [SUBTOTAL]
	FROM DET_VENTA A, PRODUCTO B
	WHERE A.DET_ID_PROD=B.PRO_ID AND A.DET_BAJA='0' AND A.DET_ID_CLI=@IDC AND A.DET_ID_VEN=0 AND A.DET_TIPO_CLI=@TC
END
GO

--geenra una nueva venta incorporando los art�culos del carrito
CREATE PROCEDURE TSP_GenerarVenta
(
@IDC	INT,
@DESC	FLOAT,
@IMP	FLOAT,
@TC		CHAR(1),--0 CLIENTE, 1 USUINT
@METE	INT,--Metodo de envio
@DIR	VARCHAR(250),--Direccion de env�o
@METP	INT,--metodo de pago
@IDP	INT--id de pago
)
AS
BEGIN
	IF(EXISTS(SELECT * FROM DET_VENTA WHERE DET_BAJA='0' AND DET_ID_CLI=@IDC AND DET_TIPO_CLI=@TC AND DET_ID_VEN=0))
	BEGIN
		DECLARE @NOMUSU NVARCHAR(50), @SUBTOTAL FLOAT, @TOTAL FLOAT, @IDVENTA INT, @COSTOENV FLOAT
		SET @SUBTOTAL=(SELECT SUM(DET_TOTAL) FROM DET_VENTA WHERE DET_BAJA='0' AND DET_ID_CLI=@IDC AND DET_TIPO_CLI=@TC AND DET_ID_VEN=0)
		SET @COSTOENV=(SELECT MET_COSTO FROM MET_ENVIO WHERE MET_ID=@METE)
		IF(@TC='0')
		BEGIN
			SET @NOMUSU=(SELECT CLI_USUARIO FROM CLIENTE WHERE CLI_ID=@IDC) 
			SET @TOTAL=(@COSTOENV+@SUBTOTAL+(@SUBTOTAL*@IMP)-(@SUBTOTAL*@DESC))
		END
		ELSE
		BEGIN
			SET @NOMUSU=(SELECT USU_USUARIO FROM USUARIOINT WHERE USU_ID=@IDC) 
			SET @TOTAL=(@COSTOENV+@SUBTOTAL+(@SUBTOTAL*@IMP))
		END
		INSERT INTO VENTA
		VALUES(@TC,@IDC,@NOMUSU,'0',@SUBTOTAL,@TOTAL,@METE,@DIR,@METP,@IDP,GETDATE())
		SET @IDVENTA=CONVERT(INT, IDENT_CURRENT('VENTA'))--OBTIENE EL INDICE DE LA VENTA ACTUAL
		UPDATE DET_VENTA
		SET DET_ID_VEN=@IDVENTA
		WHERE DET_BAJA='0' AND DET_ID_CLI=@IDC AND DET_TIPO_CLI=@TC AND DET_ID_VEN=0
		SELECT @IDVENTA
	END
	ELSE
		SELECT '0'--NO HAY PRODUCTOS
END
GO

--obtiene la cantidad del detalle de venta 
CREATE PROCEDURE TSP_DetObtCant
(
@ID	INT
)
AS
BEGIN
	SELECT DET_CANT FROM DET_VENTA WHERE DET_ID=@ID
END
GO

--Obtiene la clave del producto de un detalle de venta
CREATE PROCEDURE TSP_DetObtCveP
(
@ID	INT
)
AS
BEGIN
	SELECT DET_ID_PROD FROM DET_VENTA WHERE DET_ID=@ID
END
GO

--Obtiene los datos de los env�os
CREATE PROCEDURE TSP_ListarDatosEnv
(
@IDENV INT
)
AS
BEGIN
	SELECT MET_ID [ID], MET_NOMBRE [NOMBRE], MET_COSTO [COSTO], MET_IMAGEN [FOTO] FROM MET_ENVIO WHERE MET_ID=@IDENV
END
GO

--registro de tarjeta, validacion de existencia 
CREATE PROCEDURE TSP_RegistrarTarj
(
@CLID	INT,
@TC		CHAR(1),
@NOT	VARCHAR(16),
@CVE	VARCHAR(4),
@MES	VARCHAR(2),
@A�O	VARCHAR(2),
@BAN	VARCHAR(15)
)
AS
BEGIN
	IF(NOT EXISTS(SELECT * FROM TARJETA WHERE @CLID=TAR_CLID AND @TC=TAR_TC AND @NOT=TAR_NO))
	BEGIN
		INSERT INTO TARJETA
		VALUES(@CLID,@NOT,@TC,@CVE,@MES,@A�O,@BAN)
		SELECT '0', IDENT_CURRENT('TARJETA')--NUEVO REGISTRO
	END
	ELSE
	BEGIN
		IF(EXISTS(SELECT * FROM TARJETA WHERE @CLID=TAR_CLID AND @TC=TAR_TC AND @NOT=TAR_NO AND @CVE=TAR_CVE AND @MES=TAR_MES AND @A�O=TAR_A�O))
		BEGIN
			SELECT '1', TAR_ID FROM TARJETA WHERE @CLID=TAR_CLID AND @TC=TAR_TC AND @NOT=TAR_NO--REGISTRO EXISTENTE
		END
		ELSE
		BEGIN
			UPDATE TARJETA
			SET TAR_CVE=@CVE, TAR_MES=@MES, TAR_A�O=@A�O
			WHERE @CLID=TAR_CLID AND @NOT=TAR_NO
			SELECT '2', TAR_ID FROM TARJETA WHERE @CLID=TAR_CLID AND @TC=TAR_TC AND @NOT=TAR_NO--REGISTRO MODIFICADO
		END
	END
END
GO

--registra dep�sito
CREATE PROCEDURE TSP_RegistrarDep
(
@CLID	INT,
@TC		CHAR(1),
@CVE	VARCHAR(18),
@DIA	VARCHAR(2),
@MES	VARCHAR(2),
@A�O	VARCHAR(2)
)
AS
BEGIN
	IF(NOT EXISTS (SELECT * FROM DEPOSITO WHERE DTO_CVE=@CVE))
	BEGIN
		INSERT INTO DEPOSITO
		VALUES(@CVE,@CLID,@TC,@DIA,@MES,@A�O)
		SELECT IDENT_CURRENT('DEPOSITO')
	END
	ELSE
		SELECT '0'
END
GO

--registra transferencia
CREATE PROCEDURE TSP_RegistrarTran
(
@CLID	INT,
@TC		CHAR(1),
@CVE	VARCHAR(18),
@DIA	VARCHAR(2),
@MES	VARCHAR(2),
@A�O	VARCHAR(2)
)
AS
BEGIN
	IF(NOT EXISTS (SELECT * FROM TRANSFERENCIA WHERE TRA_CVE=@CVE))
	BEGIN
		INSERT INTO TRANSFERENCIA
		VALUES(@CVE,@CLID,@TC,@DIA,@MES,@A�O)
		SELECT IDENT_CURRENT('TRANSFERENCIA')
	END
	ELSE
		SELECT '0'
END
GO

--obtiene losmetodos de pago registrados del cliente (tarjetas)
CREATE PROCEDURE TSP_ListarTarjetasCli
(
@CLID	INT,
@TC		CHAR(1)
)
AS
BEGIN
	SELECT TAR_ID [ID], TAR_BAN + ' ***' + SUBSTRING(TAR_NO,14,3) [NOM] FROM TARJETA WHERE TAR_CLID=@CLID AND TAR_TC=@TC
END
GO

--OBTIENE LOS DATOS DE UNA TARJETA
CREATE PROCEDURE TSP_DatosTarjetaCliente
(
@ID	INT
)
AS
BEGIN
	IF(EXISTS (SELECT * FROM TARJETA WHERE TAR_ID=@ID))
	BEGIN
		SELECT TAR_NO [NUMERO], TAR_A�O [A�O], TAR_MES [MES], TAR_CVE [CVE] FROM TARJETA WHERE TAR_ID=@ID
	END
	ELSE
		SELECT '0'
END
GO

--Obtiene los datos de una venta de un cliente
CREATE PROCEDURE TSP_DatosVenta
(
@CVE	INT
)
AS 
BEGIN
	DECLARE @METP INT
	SET @METP=(SELECT VEN_MET_PAGO FROM VENTA WHERE VEN_ID=@CVE)
	IF(@METP=1)
	BEGIN
		SELECT A.VEN_ID [ID], A.VEN_ID_CLI [IDC], B.CLI_NOMBRE+' '+B.CLI_APE_PAT+' '+B.CLI_APE_MAT [NOMBRE], A.VEN_DIREC [DIRECCI�N], A.VEN_FECHA [FECHA], A.VEN_SUBTOTAL [SUBT], A.VEN_TOTAL [TOTAL], C.TAR_ID [ID], C.TAR_BAN + ' ***' + SUBSTRING(C.TAR_NO,14,3) [METODOP], D.MET_NOMBRE [METE], D.MET_COSTO [COSTOE], E.DET_ID [DID], F.PRO_ID [PRID], F.PRO_NOMBRE, E.DET_PREC_UNIT [PRU], E.DET_CANT [CANT], E.DET_TOTAL [TOTDET], A.VEN_SUBTOTAL*0.16 [IVA]
		FROM VENTA A, CLIENTE B, TARJETA C, MET_ENVIO D, DET_VENTA E, PRODUCTO F WHERE A.VEN_ID=@CVE AND B.CLI_ID=VEN_ID_CLI AND E.DET_ID_VEN=@CVE AND C.TAR_ID=A.VEN_ID_PAGO AND D.MET_ID=A.VEN_MET_ENVIO AND F.PRO_ID= E.DET_ID_PROD AND A.VEN_TIPO_CLI=C.TAR_TC
	END
	ELSE IF(@METP=2)
	BEGIN
		SELECT A.VEN_ID [ID], A.VEN_ID_CLI [IDC], B.CLI_NOMBRE+' '+B.CLI_APE_PAT+' '+B.CLI_APE_MAT [NOMBRE], A.VEN_DIREC [DIRECCI�N], A.VEN_FECHA [FECHA], A.VEN_SUBTOTAL [SUBT], A.VEN_TOTAL [TOTAL], C.TRA_ID [ID], 'TRANSFERENCIA ' + SUBSTRING(C.TRA_CVE,1,3) + ' ***' [METODOP], D.MET_NOMBRE [METE], D.MET_COSTO [COSTOE], E.DET_ID [DID], F.PRO_ID [PRID], F.PRO_NOMBRE, E.DET_PREC_UNIT [PRU], E.DET_CANT [CANT], E.DET_TOTAL [TOTDET], A.VEN_SUBTOTAL*0.16 [IVA]
		FROM VENTA A, CLIENTE B, TRANSFERENCIA C, MET_ENVIO D, DET_VENTA E, PRODUCTO F WHERE A.VEN_ID=@CVE AND B.CLI_ID=VEN_ID_CLI AND E.DET_ID_VEN=@CVE AND C.TRA_ID=A.VEN_ID_PAGO AND D.MET_ID=A.VEN_MET_ENVIO AND F.PRO_ID= E.DET_ID_PROD AND A.VEN_TIPO_CLI=C.TRA_TC
	END
	ELSE IF(@METP=3)
	BEGIN
		SELECT A.VEN_ID [ID], A.VEN_ID_CLI [IDC], B.CLI_NOMBRE+' '+B.CLI_APE_PAT+' '+B.CLI_APE_MAT [NOMBRE], A.VEN_DIREC [DIRECCI�N], A.VEN_FECHA [FECHA], A.VEN_SUBTOTAL [SUBT], A.VEN_TOTAL [TOTAL], C.DTO_ID [ID], 'DEP�SITO ' + SUBSTRING(C.DTO_CVE,1,3) + ' ***' [METODOP], D.MET_NOMBRE [METE], D.MET_COSTO [COSTOE], E.DET_ID [DID], F.PRO_ID [PRID], F.PRO_NOMBRE, E.DET_PREC_UNIT [PRU], E.DET_CANT [CANT], E.DET_TOTAL [TOTDET], A.VEN_SUBTOTAL*0.16 [IVA]
		FROM VENTA A, CLIENTE B, DEPOSITO C, MET_ENVIO D, DET_VENTA E, PRODUCTO F WHERE A.VEN_ID=@CVE AND B.CLI_ID=VEN_ID_CLI AND E.DET_ID_VEN=@CVE AND C.DTO_ID=A.VEN_ID_PAGO AND D.MET_ID=A.VEN_MET_ENVIO AND F.PRO_ID= E.DET_ID_PROD AND A.VEN_TIPO_CLI=C.DTO_TC
	END
END
GO

--Obtiene los datos de una venta de un usuarioint
CREATE PROCEDURE TSP_DatosVentaU
(
@CVE	INT
)
AS 
BEGIN
	DECLARE @METP INT
	SET @METP=(SELECT VEN_MET_PAGO FROM VENTA WHERE VEN_ID=@CVE)
	IF(@METP=1)
	BEGIN
		SELECT A.VEN_ID [ID], A.VEN_ID_CLI [IDC], B.USU_NOMBRE+' '+B.USU_APE_PAT+' '+B.USU_APE_MAT [NOMBRE], A.VEN_DIREC [DIRECCI�N], A.VEN_FECHA [FECHA], A.VEN_SUBTOTAL [SUBT], A.VEN_TOTAL [TOTAL], C.TAR_ID [ID], C.TAR_BAN + ' ***' + SUBSTRING(C.TAR_NO,14,3) [METODOP], D.MET_NOMBRE [METE], D.MET_COSTO [COSTOE], E.DET_ID [DID], F.PRO_ID [PRID], F.PRO_NOMBRE, E.DET_PREC_UNIT [PRU], E.DET_CANT [CANT], E.DET_TOTAL [TOTDET], A.VEN_SUBTOTAL*0.16 [IVA]
		FROM VENTA A, USUARIOINT B, TARJETA C, MET_ENVIO D, DET_VENTA E, PRODUCTO F WHERE A.VEN_ID=@CVE AND B.USU_ID=VEN_ID_CLI AND E.DET_ID_VEN=@CVE AND C.TAR_ID=A.VEN_ID_PAGO AND D.MET_ID=A.VEN_MET_ENVIO AND F.PRO_ID= E.DET_ID_PROD AND A.VEN_TIPO_CLI=C.TAR_TC
	END
	ELSE IF(@METP=2)
	BEGIN
		SELECT A.VEN_ID [ID], A.VEN_ID_CLI [IDC], B.USU_NOMBRE+' '+B.USU_APE_PAT+' '+B.USU_APE_MAT [NOMBRE], A.VEN_DIREC [DIRECCI�N], A.VEN_FECHA [FECHA], A.VEN_SUBTOTAL [SUBT], A.VEN_TOTAL [TOTAL], C.TRA_ID [ID], 'TRANSFERENCIA ' + SUBSTRING(C.TRA_CVE,1,3) + ' ***' [METODOP], D.MET_NOMBRE [METE], D.MET_COSTO [COSTOE], E.DET_ID [DID], F.PRO_ID [PRID], F.PRO_NOMBRE, E.DET_PREC_UNIT [PRU], E.DET_CANT [CANT], E.DET_TOTAL [TOTDET], A.VEN_SUBTOTAL*0.16 [IVA]
		FROM VENTA A, USUARIOINT B, TRANSFERENCIA C, MET_ENVIO D, DET_VENTA E, PRODUCTO F WHERE A.VEN_ID=@CVE AND B.USU_ID=VEN_ID_CLI AND E.DET_ID_VEN=@CVE AND C.TRA_ID=A.VEN_ID_PAGO AND D.MET_ID=A.VEN_MET_ENVIO AND F.PRO_ID= E.DET_ID_PROD AND A.VEN_TIPO_CLI=C.TRA_TC
	END
	ELSE IF(@METP=3)
	BEGIN
		SELECT A.VEN_ID [ID], A.VEN_ID_CLI [IDC], B.USU_NOMBRE+' '+B.USU_APE_PAT+' '+B.USU_APE_MAT [NOMBRE], A.VEN_DIREC [DIRECCI�N], A.VEN_FECHA [FECHA], A.VEN_SUBTOTAL [SUBT], A.VEN_TOTAL [TOTAL], C.DTO_ID [ID], 'DEP�SITO ' + SUBSTRING(C.DTO_CVE,1,3) + ' ***' [METODOP], D.MET_NOMBRE [METE], D.MET_COSTO [COSTOE], E.DET_ID [DID], F.PRO_ID [PRID], F.PRO_NOMBRE, E.DET_PREC_UNIT [PRU], E.DET_CANT [CANT], E.DET_TOTAL [TOTDET], A.VEN_SUBTOTAL*0.16 [IVA]
		FROM VENTA A, USUARIOINT B, DEPOSITO C, MET_ENVIO D, DET_VENTA E, PRODUCTO F WHERE A.VEN_ID=@CVE AND B.USU_ID=VEN_ID_CLI AND E.DET_ID_VEN=@CVE AND C.DTO_ID=A.VEN_ID_PAGO AND D.MET_ID=A.VEN_MET_ENVIO AND F.PRO_ID= E.DET_ID_PROD AND A.VEN_TIPO_CLI=C.DTO_TC
	END
END
GO


--Lista todas las ventas de un cliente
CREATE PROCEDURE TSP_ListarVentasCli
(
@IDC	INT,
@TC		CHAR(1), --TIPO DE USUARIO 0 CLIENTE 1 USUARIO
@BAJA	INT --0 SI SE QUIEREN VENTAS EN ALTA
)
AS
BEGIN
	IF(@BAJA=0)
	BEGIN
		SELECT A.VEN_ID [ID], A.VEN_FECHA [FECHA], A.VEN_SUBTOTAL [SUBTOTAL], A.VEN_TOTAL [TOTAL] FROM VENTA A WHERE A.VEN_ID_CLI=@IDC AND A.VEN_TIPO_CLI=@TC AND A.VEN_STUS='0'
	END
	ELSE
	BEGIN
		SELECT A.VEN_ID [ID], A.VEN_FECHA [FECHA], A.VEN_SUBTOTAL [SUBTOTAL], A.VEN_TOTAL [TOTAL] FROM VENTA A WHERE A.VEN_ID_CLI=@IDC AND A.VEN_TIPO_CLI=@TC
	END
END
GO

--Verifica si el cliente ha hecho ventas
CREATE PROCEDURE TSP_VerificaVentasCli
(
@IDC	INT,
@TC		CHAR(1),--TIPO DE USUARIO 0 CLIENTE 1 USUARIO
@STUS	INT	--0 EN ALTA, 1 EN BAJA, 2 AMBAS
)
AS
BEGIN
	IF(@STUS=0)
	BEGIN
		IF(EXISTS (SELECT * FROM VENTA WHERE VEN_ID_CLI=@IDC AND VEN_TIPO_CLI=@TC AND VEN_STUS='0'))
		BEGIN
			SELECT '0'
		END
		ELSE
			SELECT '1'
	END
	ELSE IF (@STUS=1)
	BEGIN
		IF(EXISTS (SELECT * FROM VENTA WHERE VEN_ID_CLI=@IDC AND VEN_TIPO_CLI=@TC AND VEN_STUS='2'))
		BEGIN
			SELECT '0'
		END
		ELSE
			SELECT '1'
	END
	ELSE
	BEGIN
		IF(EXISTS (SELECT * FROM VENTA WHERE VEN_ID_CLI=@IDC AND VEN_TIPO_CLI=@TC))
		BEGIN
			SELECT '0'
		END
		ELSE
			SELECT '1'
	END
END
GO

--Cancela la venta seleccionada y actualiza las existencias
CREATE PROCEDURE TSP_CancelarVenta
(
@IDV	INT
)
AS
BEGIN
	IF(EXISTS(SELECT * FROM VENTA WHERE VEN_ID=@IDV))
	BEGIN
		IF(EXISTS(SELECT * FROM VENTA WHERE VEN_ID=@IDV AND VEN_STUS='0'))
		BEGIN
			DECLARE @T TABLE (IDP INT, CANT INT, ROWN INT)
			INSERT INTO @T SELECT DET_ID_PROD, DET_CANT, ROW_NUMBER() OVER (ORDER BY DET_ID_PROD) FROM DET_VENTA WHERE DET_ID_VEN=@IDV AND DET_BAJA='0'
			DECLARE @N INT, @FLAG INT
			SET @N=(SELECT COUNT(IDP) FROM @T)
			SET @FLAG=1
			WHILE (@FLAG<=@N)
			BEGIN
				UPDATE PRODUCTO
				SET PRO_EXIST=PRO_EXIST+(SELECT CANT FROM @T WHERE ROWN=@FLAG)
				WHERE PRO_ID=(SELECT IDP FROM @T WHERE ROWN=@FLAG)
				SET @FLAG=@FLAG+1
			END 

			UPDATE VENTA 
			SET VEN_STUS='2'
			WHERE VEN_ID=@IDV
			SELECT '0'
		END
		ELSE
			SELECT '1'
	END
	ELSE
		SELECT '2'
END
GO




----------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------REPORTES--------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------
--Verifica que haya ventas de un cliente o usuario
CREATE PROCEDURE TSP_VerifVentasCli
(
@IDC	INT,
@TC		CHAR(1)
)
AS
BEGIN
	IF(@TC='0')
	BEGIN
		IF(EXISTS(SELECT * FROM VENTA A, CLIENTE B WHERE A.VEN_ID_CLI=@IDC AND A.VEN_STUS='0' AND B.CLI_ID=A.VEN_ID_CLI))
		BEGIN
			IF(EXISTS(SELECT * FROM VENTA A, CLIENTE B WHERE A.VEN_ID_CLI=@IDC AND A.VEN_STUS='2' AND B.CLI_ID=A.VEN_ID_CLI))
			BEGIN
				SELECT '0'--HAY VENTAS ALTAS Y BAJAS
			END
			ELSE
				SELECT '1'--SOLO HAY VENTAS ACTIVAS
		END
		ELSE
		BEGIN
			IF(EXISTS(SELECT * FROM VENTA A, CLIENTE B WHERE A.VEN_ID_CLI=@IDC AND A.VEN_STUS='2' AND B.CLI_ID=A.VEN_ID_CLI))
			BEGIN
				SELECT '2'--SOLO HAY VENTAS BAJAS
			END
			ELSE
				SELECT '3'--NO HAY VENTAS DE NINGUN TIPO
		END
	END
	ELSE
	BEGIN
		IF(EXISTS(SELECT * FROM VENTA A, CLIENTE B WHERE A.VEN_ID_CLI=@IDC AND A.VEN_STUS='0' AND B.CLI_ID=A.VEN_ID_CLI))
		BEGIN
			IF(EXISTS(SELECT * FROM VENTA A, CLIENTE B WHERE A.VEN_ID_CLI=@IDC AND A.VEN_STUS='2' AND B.CLI_ID=A.VEN_ID_CLI))
			BEGIN
				SELECT '0'
			END
			ELSE
				SELECT '1'
		END
		ELSE
		BEGIN
			IF(EXISTS(SELECT * FROM VENTA A, CLIENTE B WHERE A.VEN_ID_CLI=@IDC AND A.VEN_STUS='2' AND B.CLI_ID=A.VEN_ID_CLI))
			BEGIN
				SELECT '2'
			END
			ELSE
				SELECT '3'
		END
	END
END
GO

--Devuelve todas las ventas de un cliente
CREATE PROCEDURE TSP_RepVentasCli
(
@IDC	INT,
@TC		CHAR(1)
)
AS
BEGIN
	DECLARE @T TABLE (ID CHAR(1), STAT VARCHAR(10))
	INSERT INTO @T VALUES('0','ACTIVA')
	INSERT INTO @T VALUES('1','PAUSADA')
	INSERT INTO @T VALUES('2','BAJA')
	IF(@TC='0')
	BEGIN
		SELECT '0', B.CLI_NOMBRE+' '+B.CLI_APE_PAT+' '+ B.CLI_APE_MAT [NOMBREC], B.CLI_ID [IDC], B.CLI_USUARIO [USUARIO], B.CLI_DIREC [DIRC], A.VEN_ID [IDV], A.VEN_FECHA [FECHA], C.STAT [STAT], A.VEN_DIREC [DIRV], A.VEN_SUBTOTAL [SUBTOT], A.VEN_TOTAL [TOTAL] 
		FROM VENTA A, CLIENTE B, @T C
		WHERE A.VEN_ID_CLI=@IDC AND B.CLI_ID=A.VEN_ID_CLI AND C.ID=A.VEN_STUS
		ORDER BY A.VEN_FECHA DESC
	END
	ELSE
	BEGIN
		SELECT '0', B.USU_NOMBRE+' '+B.USU_APE_PAT+' '+ B.USU_APE_MAT [NOMBREC], B.USU_ID [IDC], B.USU_USUARIO [USUARIO], B.USU_DIREC [DIRC], A.VEN_ID [IDV], A.VEN_FECHA [FECHA], C.STAT [STAT], A.VEN_DIREC [DIRV], A.VEN_SUBTOTAL [SUBTOT], A.VEN_TOTAL [TOTAL] 
		FROM VENTA A, USUARIOINT B, @T C  
		WHERE A.VEN_ID_CLI=@IDC AND B.USU_ID=A.VEN_ID_CLI AND C.ID=A.VEN_STUS
		ORDER BY A.VEN_FECHA DESC
	END
END
GO


--DEVUELVE LAS VENTAS CANCELADAS DE UN CLIENTE
CREATE PROCEDURE TSP_RepVentasCancCli
(
@IDC	INT,
@TC		CHAR(1)
)
AS
BEGIN
	IF(@TC='0')
	BEGIN
		SELECT '0', B.CLI_NOMBRE+' '+B.CLI_APE_PAT+' '+ B.CLI_APE_MAT [NOMBREC], B.CLI_ID [IDC], B.CLI_USUARIO [USUARIO], B.CLI_DIREC [DIRC], A.VEN_ID [IDV], A.VEN_FECHA [FECHA], A.VEN_DIREC [DIRV], A.VEN_SUBTOTAL [SUBTOT], A.VEN_TOTAL [TOTAL] 
		FROM VENTA A, CLIENTE B
		WHERE A.VEN_ID_CLI=@IDC AND B.CLI_ID=A.VEN_ID_CLI AND A.VEN_STUS='2'
		ORDER BY A.VEN_FECHA DESC
	END
	ELSE
	BEGIN
		SELECT '0', B.USU_NOMBRE+' '+B.USU_APE_PAT+' '+ B.USU_APE_MAT [NOMBREC], B.USU_ID [IDC], B.USU_USUARIO [USUARIO], B.USU_DIREC [DIRC], A.VEN_ID [IDV], A.VEN_FECHA [FECHA], A.VEN_DIREC [DIRV], A.VEN_SUBTOTAL [SUBTOT], A.VEN_TOTAL [TOTAL] 
		FROM VENTA A, USUARIOINT B 
		WHERE A.VEN_ID_CLI=@IDC AND B.USU_ID=A.VEN_ID_CLI AND A.VEN_STUS='2'
		ORDER BY A.VEN_FECHA DESC
	END
END
GO


--verifica la existencia de ventas en general
CREATE PROCEDURE TSP_VerifExistVenG
AS
BEGIN
	IF(EXISTS(SELECT * FROM VENTA WHERE VEN_STUS='0'))
	BEGIN
		SELECT '0'
	END
	ELSE
		SELECT '1'
END
GO
--obtiene las ultimas 20 ventas registradas
CREATE PROCEDURE TSP_RepUlVentasG
AS
BEGIN
	DECLARE @T TABLE (IDV INT, FECHV DATETIME, IDC INT, NOMBREU VARCHAR(10), DIR VARCHAR(250), SUBT FLOAT, TOTAL FLOAT)
	INSERT INTO @T SELECT A.VEN_ID, A.VEN_FECHA, B.CLI_ID, B.CLI_USUARIO, A.VEN_DIREC, A.VEN_SUBTOTAL, A.VEN_TOTAL FROM VENTA A, CLIENTE B WHERE A.VEN_STUS='0' AND A.VEN_ID_CLI=B.CLI_ID 
	INSERT INTO @T SELECT A.VEN_ID, A.VEN_FECHA, B.USU_ID, B.USU_USUARIO, A.VEN_DIREC, A.VEN_SUBTOTAL, A.VEN_TOTAL FROM VENTA A, USUARIOINT B WHERE A.VEN_STUS='0' AND A.VEN_ID_CLI=B.USU_ID
	SELECT TOP 20 * FROM @T ORDER BY FECHV DESC
END
GO


--verifica si hay productos vendidos
CREATE PROCEDURE TSP_VerifVenProd
AS
BEGIN
	IF(EXISTS(SELECT * FROM DET_VENTA WHERE DET_BAJA='0' AND DET_ID_VEN<>0))
	BEGIN
		SELECT '0'
	END
	ELSE
		SELECT '1'
END
GO
--Obtiene los 10 productos m�s vendidos
CREATE PROCEDURE TSP_RepProdMasV
AS
BEGIN
	DECLARE @T TABLE (IDP INT, CANT INT)
	INSERT INTO @T SELECT TOP 10 A.DET_ID_PROD, SUM(A.DET_CANT) FROM DET_VENTA A WHERE A.DET_BAJA='0' AND A.DET_ID_VEN<>0 GROUP BY A.DET_ID_PROD ORDER BY SUM(A.DET_CANT) DESC
	SELECT A.IDP, B.PRO_CODIGO, B.PRO_NOMBRE, B.PRO_FECHA_REG, A.CANT FROM @T A, PRODUCTO B WHERE A.IDP=B.PRO_ID
END
GO
--Obtiene los 10 productos menos vendidos
CREATE PROCEDURE TSP_RepProdMenV
AS
BEGIN
	DECLARE @T TABLE (IDP INT, CANT INT)
	INSERT INTO @T SELECT TOP 10 A.DET_ID_PROD, SUM(A.DET_CANT) FROM DET_VENTA A WHERE A.DET_BAJA='0' AND A.DET_ID_VEN<>0 GROUP BY A.DET_ID_PROD ORDER BY SUM(A.DET_CANT) ASC
	SELECT A.IDP, B.PRO_CODIGO, B.PRO_NOMBRE, B.PRO_FECHA_REG, A.CANT FROM @T A, PRODUCTO B WHERE A.IDP=B.PRO_ID
END
GO

--Obtiene el total de todas las ventas
CREATE PROCEDURE TSP_RepTotVentas
AS
BEGIN
	SELECT VEN_ID [IDV], VEN_USUARIO [USU], VEN_FECHA [FECHA], VEN_SUBTOTAL [SUBTOTAL], VEN_TOTAL [TOTAL] FROM VENTA WHERE VEN_STUS='0'
END
GO


--Verifica si hay clientes o empleados registrados activos
CREATE PROCEDURE TSP_VerifCliReg
(
@TU	INT
)
AS
BEGIN
	IF(@TU=0)
	BEGIN
		IF(EXISTS (SELECT * FROM CLIENTE WHERE CLI_BAJA='0'))
		BEGIN
			SELECT '0'
		END
		ELSE
			SELECT '1'
	END
	ELSE
		IF(EXISTS (SELECT * FROM USUARIOINT WHERE USU_BAJA='0'))
		BEGIN
			SELECT '0'
		END
		ELSE
			SELECT '1'
END
GO
--Obtiene los clientes o empleados registrados activos
CREATE PROCEDURE TSP_RepCliReg
(
@TU	INT
)
AS
BEGIN
	IF(@TU=0)
	BEGIN
		SELECT 'CLIENTES', CLI_ID [ID], CLI_USUARIO [USU], CLI_NOMBRE+' '+CLI_APE_PAT+' '+CLI_APE_MAT [NOMBRE], CLI_FECHA_REG FROM CLIENTE WHERE CLI_BAJA='0'
	END
	ELSE
		SELECT 'EMPLEADOS', USU_ID [ID], USU_USUARIO [USU], USU_NOMBRE+' '+USU_APE_PAT+' '+USU_APE_MAT [NOMBRE], USU_FECHA_REG [CLI_FECHA_REG] FROM USUARIOINT WHERE USU_BAJA='0'
END
GO


--Verifica si hay productos con existencias
CREATE PROCEDURE TSP_VerifExistProd
AS
BEGIN
	IF(EXISTS(SELECT * FROM PRODUCTO WHERE PRO_BAJA='0' AND PRO_EXIST>0))
	BEGIN
		SELECT '0'
	END
	ELSE
		SELECT '1'	
END
GO
--Obtiene los productos con existencias
CREATE PROCEDURE TSP_RepProdCExist
AS
BEGIN
	SELECT PRO_ID [ID], PRO_CODIGO [CODIGO], PRO_NOMBRE [NOMBRE], PRO_FECHA_REG [FECHA], PRO_EXIST [EXIST] FROM PRODUCTO WHERE PRO_BAJA='0' AND PRO_EXIST>0
END
GO

--Verifica si hay productos sin existencias
CREATE PROCEDURE TSP_VerifSExistProd
AS
BEGIN
	IF(EXISTS(SELECT * FROM PRODUCTO WHERE PRO_BAJA='0' AND PRO_EXIST<=0))
	BEGIN
		SELECT '0'
	END
	ELSE
		SELECT '1'	
END
GO
--Obtiene los productos sin existencias
CREATE PROCEDURE TSP_RepifProdSExist
AS
BEGIN
	SELECT PRO_ID [ID], PRO_CODIGO [CODIGO], PRO_NOMBRE [NOMBRE], PRO_FECHA_REG [FECHA] FROM PRODUCTO WHERE PRO_BAJA='0' AND PRO_EXIST<=0
END
GO


CREATE PROCEDURE TSP_BuscarClientesCV
(
@KEY	NVARCHAR(15),
@NKEY	INT,
@TC		CHAR(1),
@TB		INT
)
AS
BEGIN
	IF(@TB=0)--BUSCA POR ID
	BEGIN
		IF(@TC='0')
		BEGIN
			SELECT DISTINCT A.CLI_ID [ID], A.CLI_USUARIO [USUARIO], A.CLI_NOMBRE+' '+A.CLI_APE_PAT+' '+A.CLI_APE_MAT [NOMBRE], A.CLI_DIREC [DIRECCION] 
			FROM CLIENTE A, VENTA B 
			WHERE A.CLI_ID=@NKEY AND B.VEN_ID_CLI=A.CLI_ID AND B.VEN_STUS='0'
		END
		ELSE
		BEGIN
			SELECT DISTINCT A.USU_ID [ID], A.USU_USUARIO [USUARIO], A.USU_NOMBRE+' '+A.USU_APE_PAT+' '+A.USU_APE_MAT [NOMBRE], A.USU_DIREC [DIRECCION] 
			FROM USUARIOINT A, VENTA B 
			WHERE A.USU_ID=@NKEY AND B.VEN_ID_CLI=A.USU_ID AND B.VEN_STUS='0'
		END
	END
	ELSE IF (@TB=1)--BUSCA POR NOMBRE
	BEGIN
		IF(@TC='0')
		BEGIN
			SELECT DISTINCT A.CLI_ID [ID], A.CLI_USUARIO [USUARIO], A.CLI_NOMBRE+' '+A.CLI_APE_PAT+' '+A.CLI_APE_MAT [NOMBRE], A.CLI_DIREC [DIRECCION] 
			FROM CLIENTE A, VENTA B 
			WHERE (A.CLI_NOMBRE+' '+A.CLI_APE_PAT+' '+A.CLI_APE_MAT) LIKE @KEY AND B.VEN_ID_CLI=A.CLI_ID AND B.VEN_STUS='0'
		END
		ELSE
		BEGIN
			SELECT DISTINCT A.USU_ID [ID], A.USU_USUARIO [USUARIO], A.USU_NOMBRE+' '+A.USU_APE_PAT+' '+A.USU_APE_MAT [NOMBRE], A.USU_DIREC [DIRECCION] 
			FROM USUARIOINT A, VENTA B 
			WHERE (A.USU_NOMBRE+' '+A.USU_APE_PAT+' '+A.USU_APE_MAT) LIKE @KEY AND B.VEN_ID_CLI=A.USU_ID AND B.VEN_STUS='0'
		END
	END
	ELSE IF (@TB=2)--BUSCA POR NOMBRE DE USUARIO
	BEGIN
		IF(@TC='0')
		BEGIN
			SELECT DISTINCT A.CLI_ID [ID], A.CLI_USUARIO [USUARIO], A.CLI_NOMBRE+' '+A.CLI_APE_PAT+' '+A.CLI_APE_MAT [NOMBRE], A.CLI_DIREC [DIRECCION] 
			FROM CLIENTE A, VENTA B 
			WHERE A.CLI_USUARIO LIKE @KEY AND B.VEN_ID_CLI=A.CLI_ID AND B.VEN_STUS='0'
		END
		ELSE
		BEGIN
			SELECT DISTINCT A.USU_ID [ID], A.USU_USUARIO [USUARIO], A.USU_NOMBRE+' '+A.USU_APE_PAT+' '+A.USU_APE_MAT [NOMBRE], A.USU_DIREC [DIRECCION] 
			FROM USUARIOINT A, VENTA B 
			WHERE A.USU_USUARIO LIKE @KEY AND B.VEN_ID_CLI=A.USU_ID AND B.VEN_STUS='0'
		END
	END
END
GO
